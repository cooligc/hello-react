{"version":3,"sources":["logo.svg","theme/Button.js","theme/theme.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","style","name","theme","App","useState","isDark","setDark","dark","setStyle","onClick","console","log","sty","light","className","type","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAAe,I,YCEA,SAASA,EAAOC,GAC3B,OACI,8BACI,wBAAQC,MAAOD,EAAMC,MAArB,SAA6BD,EAAME,SCL/C,IAWeC,EAXD,CACV,KAAS,CACL,WAAe,UACf,MAAU,WAEd,MAAU,CACN,WAAe,UACf,MAAU,YCyBHC,MA1Bf,WAGE,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAASF,EAAMK,MAAzC,mBAAOP,EAAP,KAAcQ,EAAd,KAGMC,EAAU,WACdC,QAAQC,IAAI,YAAcN,GAC1B,IAAMO,EAAMP,EAASH,EAAMK,KAAOL,EAAMW,MACxCP,GAASD,GACTG,EAASI,GACTF,QAAQC,IAAI,aAAeN,IAG7B,OACE,sBAAKS,UAAU,MAAf,UACE,kDACe,uBAAOC,KAAK,QAAQd,KAAK,QAAQe,SAAUP,IAD1D,gBAEgB,uBAAOM,KAAK,QAAQd,KAAK,QAAQe,SAAUP,OAEzD,cAACX,EAAD,CAAQG,KAAK,WAAWD,MAAOA,QCfxBiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.dd4afd17.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\n\nexport default function Button(props) {\n    return (\n        <div>\n            <button style={props.style}>{props.name}</button>\n        </div>\n    )\n}\n","const theme = {\n    \"dark\" : {\n        \"background\" : \"#7054e0\",\n        \"color\" : \"#54c0e0\",\n    },\n    \"light\" : {\n        \"background\" : \"#a393e4\",\n        \"color\" : \"#8bc8da\"\n    }\n}\n\nexport default theme;","import logo from './logo.svg';\nimport {useState,useEffect} from 'react';\nimport './App.css';\nimport Button from './theme/Button';\nimport theme from './theme/theme';\n\nfunction App() {\n\n\n  const [isDark, setDark] = useState(true)\n  const [style, setStyle] = useState(theme.dark)\n  const hi = {\"height\":\"100px\", \"width\" : \"100px\"}\n  \n  const onClick = () => {\n    console.log(\"Selected \" + isDark)\n    const sty = isDark ? theme.dark : theme.light;\n    setDark(!isDark)\n    setStyle(sty)\n    console.log(\"Selected 2\" + isDark)\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n         Dark Mode : <input type=\"radio\" name=\"theme\" onChange={onClick}/>\n         Light Mode : <input type=\"radio\" name=\"theme\" onChange={onClick}/>\n      </header>\n        <Button name=\"Click Me\" style={style}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}